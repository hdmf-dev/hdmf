name: Run tests on conda
on:
  push:
    branches:
      - dev  # NOTE: this workflow will run on each PR event and also when the PR is merged to dev
    tags-ignore:  # exclude tags created by "ci_addons publish_github_release"
      - 'latest'
      - 'latest-tmp'
  pull_request:
    branches:
      - '*'

jobs:
  run-pr-tests-on-conda:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    defaults:
     run:
       shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: linux-python3.7 , test-tox-env: py37 , build-tox-env: build-py37 , python-ver: "3.7" }
          - { name: linux-python3.10, test-tox-env: py310, build-tox-env: build-py310, python-ver: "3.10"}
    steps:
      - name: Cancel any previous incomplete runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          auto-activate-base: true
          activate-environment: ""

      - name: Install build dependencies
        run: |
          conda update -n base -c defaults conda
          conda config --set always_yes yes --set changeps1 no
          conda config --add channels conda-forge
          conda install python=${{ matrix.python-ver }}
          # work around incompatibilities between virtualenv & importlib-metadata
          if [[ "${{ matrix.test-tox-env }}" == *"py37"* ]]; then
            conda install "importlib-metadata=1.7"
          else
            conda install importlib-metadata
          fi
          conda install tox

      - name: Run unit tests
        run: |
          tox -e ${{ matrix.test-tox-env }}

      - name: Build wheel and source distribution
        run: |
          tox -e ${{ matrix.build-tox-env }}
          ls -1 dist

      - name: Test installation from a wheel
        run: |
          tox -e wheelinstall --recreate --installpkg dist/*-none-any.whl
