name: Run tests
on:
  push:
    branches:
      - dev
    tags:
      - '**'
      - '!latest'
      - '!latest-tmp'
  pull_request:
    branches:
    - '**'
  schedule:
    - cron: '0 5 * * *'  # Once per day at midnight ET
jobs:
  run-tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        include:
          # - { name: linux/python3.7-min-req                       , test-tox-env: py37-min-req          , build-tox-env: build-py37-min-req          , python-ver: "3.7"        , os: ubuntu-latest }
          # - { name: linux/python3.7                               , test-tox-env: py37                  , build-tox-env: build-py37                  , python-ver: "3.7"        , os: ubuntu-latest }
          # - { name: linux/python3.10                              , test-tox-env: py310                 , build-tox-env: build-py310                 , python-ver: "3.10"       , os: ubuntu-latest }
          # - { name: linux/python3.10-opt                          , test-tox-env: py310-opt             , build-tox-env: build-py310-opt             , python-ver: "3.10"       , os: ubuntu-latest }
          # - { name: linux/python3.10-upgrade-dev                  , test-tox-env: py310-upgrade-dev     , build-tox-env: build-py310-upgrade-dev     , python-ver: "3.10"       , os: ubuntu-latest }
          # - { name: linux/python3.10-upgrade-dev-pre              , test-tox-env: py310-upgrade-dev-pre , build-tox-env: build-py310-upgrade-dev-pre , python-ver: "3.10"       , os: ubuntu-latest }
          # - { name: windows/python3.7-min-req                     , test-tox-env: py37-min-req          , build-tox-env: build-py37-min-req          , python-ver: "3.7"        , os: windows-latest }
          # - { name: windows/python3.7                             , test-tox-env: py37                  , build-tox-env: build-py37                  , python-ver: "3.7"        , os: windows-latest }
          # - { name: windows/python3.10                            , test-tox-env: py310                 , build-tox-env: build-py310                 , python-ver: "3.10"       , os: windows-latest }
          # - { name: windows/python3.10-opt                        , test-tox-env: py310-opt             , build-tox-env: build-py310-opt             , python-ver: "3.10"       , os: windows-latest }
          # - { name: windows/python3.10-upgrade-dev                , test-tox-env: py310-upgrade-dev     , build-tox-env: build-py310-upgrade-dev     , python-ver: "3.10"       , os: windows-latest }
          # - { name: windows/python3.10-upgrade-dev-pre            , test-tox-env: py310-upgrade-dev-pre , build-tox-env: build-py310-upgrade-dev-pre , python-ver: "3.10"       , os: windows-latest }
          # - { name: macos/python3.7-min-req                       , test-tox-env: py37-min-req          , build-tox-env: build-py37-min-req          , python-ver: "3.7"        , os: macos-latest }
          # - { name: macos/python3.7                               , test-tox-env: py37                  , build-tox-env: build-py37                  , python-ver: "3.7"        , os: macos-latest }
          - { name: macos/python3.10                              , test-tox-env: py310                 , build-tox-env: build-py310                 , python-ver: "3.10"       , os: macos-latest }
          # - { name: macos/python3.10-opt                          , test-tox-env: py310-opt             , build-tox-env: build-py310-opt             , python-ver: "3.10"       , os: macos-latest }
          # - { name: macos/python3.10-upgrade-dev                  , test-tox-env: py310-upgrade-dev     , build-tox-env: build-py310-upgrade-dev     , python-ver: "3.10"       , os: macos-latest }
          # - { name: macos/python3.10-upgrade-dev-pre              , test-tox-env: py310-upgrade-dev-pre , build-tox-env: build-py310-upgrade-dev-pre , python-ver: "3.10"       , os: macos-latest }
          # - { name: linux/miniconda3.7                            , test-tox-env: py37                  , build-tox-env: build-py37                  , conda-python-ver: "3.7"  , os: ubuntu-latest }
          # - { name: linux/miniconda3.10                           , test-tox-env: py310                 , build-tox-env: build-py310                 , conda-python-ver: "3.10" , os: ubuntu-latest }
          # - { name: linux/sphinx-gallery-python3.7-min-req        , test-tox-env: py37-min-req          , build-tox-env: build-py37-min-req          , python-ver: "3.7"        , os: ubuntu-latest }
          # - { name: linux/sphinx-gallery-python3.10-upgrade-dev   , test-tox-env: py310-upgrade-dev     , build-tox-env: build-py310-upgrade-dev     , python-ver: "3.10"       , os: ubuntu-latest }
          # - { name: windows/sphinx-gallery-python3.7-min-req      , test-tox-env: py37-min-req          , build-tox-env: build-py37-min-req          , python-ver: "3.7"        , os: windows-latest }
          # - { name: windows/sphinx-gallery-python3.10-upgrade-dev , test-tox-env: py310-upgrade-dev     , build-tox-env: build-py310-upgrade-dev     , python-ver: "3.10"       , os: windows-latest }
          # - { name: macos/sphinx-gallery-python3.7-min-req        , test-tox-env: py37-min-req          , build-tox-env: build-py37-min-req          , python-ver: "3.7"        , os: macos-latest }
          # - { name: macos/sphinx-gallery-python3.10-upgrade-dev   , test-tox-env: py310-upgrade-dev     , build-tox-env: build-py310-upgrade-dev     , python-ver: "3.10"       , os: macos-latest }
    steps:
      - name: Cancel any previous incomplete runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Set up Python
        uses: actions/setup-python@v3
        if: ${{ matrix.python-ver }}
        with:
          python-version: "${{ matrix.python-ver }}"
      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        if: ${{ matrix.conda-python-ver }}
        with:
          auto-update-conda: true
          auto-activate-base: true
          activate-environment: ""
      - name: Install build dependencies
        if: ${{ matrix.python-ver }}
        run: |
          # Installing HDF5 is required for building h5py 2.10 wheels for Python 3.9+
          python --version
          # if [[ "${{ matrix.test-tox-env }}" == *"py39"* ]] || [[ "${{ matrix.test-tox-env }}" == *"py310"* ]]; then
          #   sudo apt-get install libhdf5-dev
          # fi
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install wheel tox
      - name: Install build dependencies (conda)
        if: ${{ matrix.conda-python-ver }}
        run: |
          conda update -n base -c defaults conda
          conda config --set always_yes yes --set changeps1 no
          conda config --add channels conda-forge
          conda install python=${{ matrix.conda-python-ver }}
          # work around incompatibilities between virtualenv & importlib-metadata
          if [[ "${{ matrix.test-tox-env }}" == *"py37"* ]]; then
            conda install "importlib-metadata=1.7"
          else
            conda install importlib-metadata
          fi
          conda install tox
      - name: Run unit tests
        run: |
          tox -e ${{ matrix.test-tox-env }}
      - name: Build wheel and source distribution
        if: ${{ matrix.build-tox-env }}
        run: |
          tox -e ${{ matrix.build-tox-env }}
          ls -1 dist
      - name: Test installation from a wheel
        if: ${{ matrix.build-tox-env }}
        run: |
          tox -e wheelinstall --recreate --installpkg dist/*-none-any.whl
      - name: Upload distribution as a workspace artifact
        if: ${{ matrix.upload-wheels }}
        uses: actions/upload-artifact@v3
        with:
          name: distributions
          path: dist
