name: Run all tests
on:
  schedule:
    - cron: '0 5 * * *'  # once per day at midnight ET
  push:
    tags:  # run only on new tags that follow semver
      - '/^[0-9]+(\.[0-9]+)?(\.[0-9]+)?$/'
jobs:
  run-all-tests:
    # the only differences between this job and "run_tests.yml" is the "strategy.matrix.include" and the upload
    # distributions step.
    # GitHub Actions does not yet support YAML anchors, easily reusable components, or easy dynamic matrix
    # configurations based on the github event, so this job is duplicated for the most part
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: linux-python3.7-min-req           , test-tox-env: py37-min-req          , build-tox-env: build-py37-min-req          , python-ver: "3.7" , os: ubuntu-latest }
          - { name: linux-python3.7                   , test-tox-env: py37                  , build-tox-env: build-py37                  , python-ver: "3.7" , os: ubuntu-latest }
          - { name: linux-python3.8                   , test-tox-env: py38                  , build-tox-env: build-py38                  , python-ver: "3.8" , os: ubuntu-latest }
          - { name: linux-python3.9                   , test-tox-env: py39                  , build-tox-env: build-py39                  , python-ver: "3.9" , os: ubuntu-latest }
          - { name: linux-python3.10                  , test-tox-env: py310                 , build-tox-env: build-py310                 , python-ver: "3.10", os: ubuntu-latest }
          - { name: linux-python3.10-opt              , test-tox-env: py310-opt             , build-tox-env: build-py310-opt             , python-ver: "3.10", os: ubuntu-latest }
          - { name: linux-python3.10-upgrade-dev      , test-tox-env: py310-upgrade-dev     , build-tox-env: build-py310-upgrade-dev     , python-ver: "3.10", os: ubuntu-latest }
          - { name: linux-python3.10-upgrade-dev-pre  , test-tox-env: py310-upgrade-dev-pre , build-tox-env: build-py310-upgrade-dev-pre , python-ver: "3.10", os: ubuntu-latest }
          - { name: windows-python3.7-min-req         , test-tox-env: py37-min-req          , build-tox-env: build-py37-min-req          , python-ver: "3.7" , os: windows-latest }
          - { name: windows-python3.7                 , test-tox-env: py37                  , build-tox-env: build-py37                  , python-ver: "3.7" , os: windows-latest }
          - { name: windows-python3.8                 , test-tox-env: py38                  , build-tox-env: build-py38                  , python-ver: "3.8" , os: windows-latest }
          - { name: windows-python3.9                 , test-tox-env: py39                  , build-tox-env: build-py39                  , python-ver: "3.9" , os: windows-latest }
          - { name: windows-python3.10                , test-tox-env: py310                 , build-tox-env: build-py310                 , python-ver: "3.10", os: windows-latest }
          - { name: windows-python3.10-opt            , test-tox-env: py310-opt             , build-tox-env: build-py310-opt             , python-ver: "3.10", os: windows-latest }
          - { name: windows-python3.10-upgrade-dev    , test-tox-env: py310-upgrade-dev     , build-tox-env: build-py310-upgrade-dev     , python-ver: "3.10", os: windows-latest }
          - { name: windows-python3.10-upgrade-dev-pre, test-tox-env: py310-upgrade-dev-pre , build-tox-env: build-py310-upgrade-dev-pre , python-ver: "3.10", os: windows-latest }
          - { name: macos-python3.7-min-req           , test-tox-env: py37-min-req          , build-tox-env: build-py37-min-req          , python-ver: "3.7" , os: macos-latest }
          - { name: macos-python3.7                   , test-tox-env: py37                  , build-tox-env: build-py37                  , python-ver: "3.7" , os: macos-latest }
          - { name: macos-python3.8                   , test-tox-env: py38                  , build-tox-env: build-py38                  , python-ver: "3.8" , os: macos-latest }
          - { name: macos-python3.9                   , test-tox-env: py39                  , build-tox-env: build-py39                  , python-ver: "3.9" , os: macos-latest }
          - { name: macos-python3.10                  , test-tox-env: py310                 , build-tox-env: build-py310                 , python-ver: "3.10", os: macos-latest }
          - { name: macos-python3.10-opt              , test-tox-env: py310-opt             , build-tox-env: build-py310-opt             , python-ver: "3.10", os: macos-latest }
          - { name: macos-python3.10-upgrade-dev      , test-tox-env: py310-upgrade-dev     , build-tox-env: build-py310-upgrade-dev     , python-ver: "3.10", os: macos-latest }
          - { name: macos-python3.10-upgrade-dev-pre  , test-tox-env: py310-upgrade-dev-pre , build-tox-env: build-py310-upgrade-dev-pre , python-ver: "3.10", os: macos-latest }
    steps:
      - name: Cancel any previous incomplete runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-ver }}

      - name: Install build dependencies
        run: |
          # Installing HDF5 is required for building h5py 2.10 wheels for Python 3.9+
          # if [[ "${{ matrix.test-tox-env }}" == *"py39"* ]] || [[ "${{ matrix.test-tox-env }}" == *"py310"* ]]; then
          #   sudo apt-get install libhdf5-dev
          # fi
          python -m pip install --upgrade pip
          python -m pip install tox
          pip list

      - name: Run tox tests
        run: |
          tox -e ${{ matrix.test-tox-env }}

      - name: Build wheel and source distribution
        run: |
          tox -e ${{ matrix.build-tox-env }}
          ls -1 dist

      - name: Test installation from a wheel
        run: |
          tox -e wheelinstall --recreate --installpkg dist/*-none-any.whl

  run-all-gallery-tests:
    name: ${{ matrix.name }}
    needs: run-all-tests
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: linux-gallery-python3.7-min-req           , test-tox-env: gallery-py37-min-req         , python-ver: "3.7" , os: ubuntu-latest }
          - { name: linux-gallery-python3.10-upgrade-dev      , test-tox-env: gallery-py310-upgrade-dev    , python-ver: "3.7" , os: ubuntu-latest }
          - { name: linux-gallery-python3.10-upgrade-dev-pre  , test-tox-env: gallery-py310-upgrade-dev-pre, python-ver: "3.10", os: ubuntu-latest }
          - { name: windows-gallery-python3.7-min-req         , test-tox-env: gallery-py37-min-req         , python-ver: "3.7" , os: windows-latest }
          - { name: windows-gallery-python3.10-upgrade-dev    , test-tox-env: gallery-py37-min-req         , python-ver: "3.7" , os: windows-latest }
          - { name: windows-gallery-python3.10-upgrade-dev-pre, test-tox-env: gallery-py37-min-req         , python-ver: "3.7" , os: windows-latest }
          - { name: macos-gallery-python3.7-min-req           , test-tox-env: gallery-py37-min-req         , python-ver: "3.7" , os: macos-latest }
          - { name: macos-gallery-python3.10-upgrade-dev      , test-tox-env: gallery-py310-upgrade-dev-pre, python-ver: "3.10", os: macos-latest }
          - { name: macos-gallery-python3.10-upgrade-dev-pre  , test-tox-env: gallery-py310-upgrade-dev-pre, python-ver: "3.10", os: macos-latest }
    steps:
      - name: Cancel any previous incomplete runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-ver }}

      - name: Install build dependencies
        run: |
          # Installing HDF5 is required for building h5py 2.10 wheels for Python 3.9+
          # if [[ "${{ matrix.test-tox-env }}" == *"py39"* ]] || [[ "${{ matrix.test-tox-env }}" == *"py310"* ]]; then
          #   sudo apt-get install libhdf5-dev
          # fi
          python -m pip install --upgrade pip
          python -m pip install tox
          pip list

      - name: Run tox tests
        run: |
          tox -e ${{ matrix.test-tox-env }}

  run-all-tests-on-conda:
    name: ${{ matrix.name }}
    needs: run-all-gallery-tests
    runs-on: ubuntu-latest
    defaults:
     run:
       shell: bash -l {0}  # needed for conda environment to work
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: linux-python3.7-min-req         , test-tox-env: py37-min-req          , build-tox-env: build-py37-min-req          , python-ver: "3.7" , os: ubuntu-latest }
          - { name: linux-python3.7                 , test-tox-env: py37                  , build-tox-env: build-py37                  , python-ver: "3.7" , os: ubuntu-latest }
          - { name: linux-python3.8                 , test-tox-env: py38                  , build-tox-env: build-py38                  , python-ver: "3.8" , os: ubuntu-latest }
          - { name: linux-python3.9                 , test-tox-env: py39                  , build-tox-env: build-py39                  , python-ver: "3.9" , os: ubuntu-latest }
          - { name: linux-python3.10                , test-tox-env: py310                 , build-tox-env: build-py310                 , python-ver: "3.10", os: ubuntu-latest }
          - { name: linux-python3.10-opt            , test-tox-env: py310-opt             , build-tox-env: build-py310-opt             , python-ver: "3.10", os: ubuntu-latest }
          - { name: linux-python3.10-upgrade-dev    , test-tox-env: py310-upgrade-dev     , build-tox-env: build-py310-upgrade-dev     , python-ver: "3.10", os: ubuntu-latest }
          - { name: linux-python3.10-upgrade-dev-pre, test-tox-env: py310-upgrade-dev-pre , build-tox-env: build-py310-upgrade-dev-pre , python-ver: "3.10", os: ubuntu-latest }
    steps:
      - name: Cancel any previous incomplete runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          auto-activate-base: true
          activate-environment: ""

      - name: Install build dependencies
        run: |
          conda update -n base -c defaults conda
          conda config --set always_yes yes --set changeps1 no
          conda config --add channels conda-forge
          conda install python=${{ matrix.python-ver }}
          # work around incompatibilities between virtualenv & importlib-metadata
          if [[ "${{ matrix.test-tox-env }}" == *"py37"* ]]; then
            conda install "importlib-metadata=1.7"
          else
            conda install importlib-metadata
          fi
          conda install tox
          conda list

      - name: Run tox tests
        run: |
          tox -e ${{ matrix.test-tox-env }}

      - name: Build wheel and source distribution
        run: |
          tox -e ${{ matrix.build-tox-env }}
          ls -1 dist

      - name: Test installation from a wheel
        run: |
          tox -e wheelinstall --recreate --installpkg dist/*-none-any.whl
