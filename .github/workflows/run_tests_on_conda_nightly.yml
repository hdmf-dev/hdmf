name: Run tests on conda nightly
on:
  schedule:
    - cron: '0 5 * * *'  # once per day at midnight ET

jobs:
  run-tests-on-conda-nightly:
    # the only difference between this job and "run_tests_on_conda.yml" is the "strategy.matrix.include".
    # GitHub Actions does not yet support YAML anchors, easily reusable components, or easy dynamic matrix
    # configurations based on the github event, so this job is duplicated for the most part
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    defaults:
     run:
       shell: bash -l {0}  # needed for conda environment to work
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: linux-python3.7 , test-tox-env: py37 , build-tox-env: build-py37 , python-ver: "3.7" }
          - { name: linux-python3.8 , test-tox-env: py38 , build-tox-env: build-py38 , python-ver: "3.8" }
          - { name: linux-python3.9 , test-tox-env: py39 , build-tox-env: build-py39 , python-ver: "3.9" }
          - { name: linux-python3.10, test-tox-env: py310, build-tox-env: build-py310, python-ver: "3.10"}
    steps:
      - name: Cancel any previous incomplete runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          auto-activate-base: true
          activate-environment: ""

      - name: Install build dependencies
        run: |
          conda update -n base -c defaults conda
          conda config --set always_yes yes --set changeps1 no
          conda config --add channels conda-forge
          conda install python=${{ matrix.python-ver }}
          # work around incompatibilities between virtualenv & importlib-metadata
          if [[ "${{ matrix.test-tox-env }}" == *"py37"* ]]; then
            conda install "importlib-metadata=1.7"
          else
            conda install importlib-metadata
          fi
          conda install tox

      - name: Run unit tests
        run: |
          tox -e ${{ matrix.test-tox-env }}

      - name: Build wheel and source distribution
        run: |
          tox -e ${{ matrix.build-tox-env }}

      - name: Test installation from a wheel
        run: |
          tox -e wheelinstall --recreate --installpkg dist/*-none-any.whl
