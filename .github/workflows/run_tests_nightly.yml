name: Run tests nightly
on:
  schedule:
    - cron: '0 5 * * *'  # once per day at midnight ET
jobs:
  run-tests-nightly:
    # the only differences between this job and "run_tests.yml" is the "strategy.matrix.include" and the upload
    # distributions step.
    # GitHub Actions does not yet support YAML anchors, easily reusable components, or easy dynamic matrix
    # configurations based on the github event, so this job is duplicated for the most part
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: linux/python3.7-min-req                       , test-tox-env: py37-min-req          , build-tox-env: build-py37-min-req          , python-ver: "3.7"        , os: ubuntu-latest }
          - { name: linux/python3.7                               , test-tox-env: py37                  , build-tox-env: build-py37                  , python-ver: "3.7"        , os: ubuntu-latest }
          - { name: linux/python3.10                              , test-tox-env: py310                 , build-tox-env: build-py310                 , python-ver: "3.10"       , os: ubuntu-latest }
          - { name: linux/python3.10-opt                          , test-tox-env: py310-opt             , build-tox-env: build-py310-opt             , python-ver: "3.10"       , os: ubuntu-latest }
          - { name: linux/python3.10-upgrade-dev                  , test-tox-env: py310-upgrade-dev     , build-tox-env: build-py310-upgrade-dev     , python-ver: "3.10"       , os: ubuntu-latest }
          - { name: linux/python3.10-upgrade-dev-pre              , test-tox-env: py310-upgrade-dev-pre , build-tox-env: build-py310-upgrade-dev-pre , python-ver: "3.10"       , os: ubuntu-latest }
          - { name: windows/python3.7-min-req                     , test-tox-env: py37-min-req          , build-tox-env: build-py37-min-req          , python-ver: "3.7"        , os: windows-latest }
          - { name: windows/python3.7                             , test-tox-env: py37                  , build-tox-env: build-py37                  , python-ver: "3.7"        , os: windows-latest }
          - { name: windows/python3.10                            , test-tox-env: py310                 , build-tox-env: build-py310                 , python-ver: "3.10"       , os: windows-latest }
          - { name: windows/python3.10-opt                        , test-tox-env: py310-opt             , build-tox-env: build-py310-opt             , python-ver: "3.10"       , os: windows-latest }
          - { name: windows/python3.10-upgrade-dev                , test-tox-env: py310-upgrade-dev     , build-tox-env: build-py310-upgrade-dev     , python-ver: "3.10"       , os: windows-latest }
          - { name: windows/python3.10-upgrade-dev-pre            , test-tox-env: py310-upgrade-dev-pre , build-tox-env: build-py310-upgrade-dev-pre , python-ver: "3.10"       , os: windows-latest }
          - { name: macos/python3.7-min-req                       , test-tox-env: py37-min-req          , build-tox-env: build-py37-min-req          , python-ver: "3.7"        , os: macos-latest }
          - { name: macos/python3.7                               , test-tox-env: py37                  , build-tox-env: build-py37                  , python-ver: "3.7"        , os: macos-latest }
          - { name: macos/python3.10                              , test-tox-env: py310                 , build-tox-env: build-py310                 , python-ver: "3.10"       , os: macos-latest }
          - { name: macos/python3.10-opt                          , test-tox-env: py310-opt             , build-tox-env: build-py310-opt             , python-ver: "3.10"       , os: macos-latest }
          - { name: macos/python3.10-upgrade-dev                  , test-tox-env: py310-upgrade-dev     , build-tox-env: build-py310-upgrade-dev     , python-ver: "3.10"       , os: macos-latest }
          - { name: macos/python3.10-upgrade-dev-pre              , test-tox-env: py310-upgrade-dev-pre , build-tox-env: build-py310-upgrade-dev-pre , python-ver: "3.10"       , os: macos-latest }
          - { name: linux/sphinx-gallery-python3.7-min-req        , test-tox-env: py37-min-req          , build-tox-env: build-py37-min-req          , python-ver: "3.7"        , os: ubuntu-latest }
          - { name: linux/sphinx-gallery-python3.10-upgrade-dev   , test-tox-env: py310-upgrade-dev     , build-tox-env: build-py310-upgrade-dev     , python-ver: "3.10"       , os: ubuntu-latest }
          - { name: windows/sphinx-gallery-python3.7-min-req      , test-tox-env: py37-min-req          , build-tox-env: build-py37-min-req          , python-ver: "3.7"        , os: windows-latest }
          - { name: windows/sphinx-gallery-python3.10-upgrade-dev , test-tox-env: py310-upgrade-dev     , build-tox-env: build-py310-upgrade-dev     , python-ver: "3.10"       , os: windows-latest }
          - { name: macos/sphinx-gallery-python3.7-min-req        , test-tox-env: py37-min-req          , build-tox-env: build-py37-min-req          , python-ver: "3.7"        , os: macos-latest }
          - { name: macos/sphinx-gallery-python3.10-upgrade-dev   , test-tox-env: py310-upgrade-dev     , build-tox-env: build-py310-upgrade-dev     , python-ver: "3.10"       , os: macos-latest }
    steps:
      - name: Cancel any previous incomplete runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-ver }}
      - name: Install build dependencies
        run: |
          # Installing HDF5 is required for building h5py 2.10 wheels for Python 3.9+
          python --version
          # if [[ "${{ matrix.test-tox-env }}" == *"py39"* ]] || [[ "${{ matrix.test-tox-env }}" == *"py310"* ]]; then
          #   sudo apt-get install libhdf5-dev
          # fi
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install wheel tox
      - name: Run unit tests
        run: |
          tox -e ${{ matrix.test-tox-env }}
      - name: Build wheel and source distribution
        run: |
          tox -e ${{ matrix.build-tox-env }}
          ls -1 dist
      - name: Test installation from a wheel
        run: |
          tox -e wheelinstall --recreate --installpkg dist/*-none-any.whl
